#include <TFile.h>
#include <TTree.h>
#include <iostream>
#include <TH1.h>
#include <TCanvas.h>
#include <TStyle.h>
#include<TApplication.h>

// All of the roofit stuff
#include "RooRealVar.h"
#include "RooDataSet.h"
#include "RooDataHist.h"
#include "RooGaussian.h"
#include "RooPlot.h"

using namespace std;

int main(){
  TApplication *myapp=new TApplication("myapp",0,0);
    
  gStyle->SetLabelSize(0.045,"x");
  gStyle->SetLabelSize(0.045,"y");
  gStyle->SetTitleSize(0.05,"x");
  gStyle->SetTitleSize(0.05,"y");
  gStyle->SetOptFit(1);

  // Initializing the pointers' types
  TFile *f;
  TDirectoryFile *dir;
  TTree *tr;
  TCanvas *BM_canvas;
  
  
  // Initializing the B mass variable
  Double_t        B_M;
  
  TH1D *mass = new TH1D("mass", "", 100, 2000, 8000);
  // Opening the file
  f = new TFile("/eos/lhcb/user/l/lgrillo/AsldRunITuples/SLB_ntuplesRunII_v1/Data2016_Strip28r1_MagUp.root");
  
  // Extracting the directory from the file
  dir = (TDirectoryFile*)f->Get("b2DsMuX");
  
  // Extracting the tree from the directory
  tr = (TTree*)dir->Get("DecayTree");
  
  // Setting the branch address to a pointer with the same name
  tr->SetBranchAddress("B_M", &B_M);
  
  // Getting the number of entries and printing
  int nentries=tr->GetEntries();
  cout<<nentries<<endl;
  
  
  
  for (int i=0; i<nentries/1000; i++){
   
    tr->GetEntry(i);
      
      if (B_M != 0){
	mass->Fill(B_M);
      }
      
  }

  /*
  TCanvas *cc=new TCanvas("cc","",900,450);
  cc->Divide(2,1);
  cc->cd(1);
  
  mass->SetTitle("Mass of B mesons");
  mass->SetXTitle("B mass in MeV/c^2");
    
  mass->DrawCopy("");
  */
  RooRealVar *mB = new RooRealVar("B_M","mass B",100, 500,"MeV");
  
  //RooDataSet * data = new RooDataSet("fitData","fit input dataset",B_M));
  
  myapp->Run(true);


  
  return 0;
  
}
